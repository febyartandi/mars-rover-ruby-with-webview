class Rover

  attr_accessor :direction, :start_positions, :move_commands, :x_post, :y_post, :error_messages
  
  def initialize(start_positions, moves_command)
    validate_input(start_positions, moves_command)
    if self.error_messages.blank?
      self.start_positions = start_positions
      self.moves_command = moves_command
    end
  end
  
  
  def validate_input(start_positions, moves_command)
    if start_positions.blank? or moves_command.blank?
      error_messages = "Current Position or Commands can't be blank !<br />"
    else
      start_positions.each_with_index do |post, i|
        if post.split(' ').size != 3
          error_messages = "#{error_messages} Current Rover Positions no #{i+i} does not valid ! <br />"
        end
      end
    end
  end
  
  def move(plateu)
    results = []
    start_positions.each_with_index do |position, i|
       x_start, y_start, direction = extract_position(position)
       new_coordinate = 
    end
    
  end
  
  def extract_position(position)
    coordinates = position.split(" ")
    x_start = coordinates[0].to_i
    y_start = coordinates[1].to_i
    face = coordinates[2]
    return x_start, y_start, face
  end
  

end
